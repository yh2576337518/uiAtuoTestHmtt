{"name": "test_mp_login[15727366536-246810-15727366536]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010876f909 chromedriver + 2533641\n1   chromedriver                        0x0000000108df9d53 chromedriver + 9391443\n2   chromedriver                        0x000000010852d3c3 chromedriver + 164803\n3   chromedriver                        0x000000010855d504 chromedriver + 361732\n4   chromedriver                        0x0000000108589984 chromedriver + 543108\n5   chromedriver                        0x0000000108578d7d chromedriver + 474493\n6   chromedriver                        0x0000000108587c06 chromedriver + 535558\n7   chromedriver                        0x0000000108579043 chromedriver + 475203\n8   chromedriver                        0x0000000108553616 chromedriver + 321046\n9   chromedriver                        0x0000000108554587 chromedriver + 324999\n10  chromedriver                        0x000000010873e7f9 chromedriver + 2332665\n11  chromedriver                        0x000000010874b963 chromedriver + 2386275\n12  chromedriver                        0x000000010874b45b chromedriver + 2384987\n13  chromedriver                        0x00000001087255b5 chromedriver + 2229685\n14  chromedriver                        0x000000010874c3bf chromedriver + 2388927\n15  chromedriver                        0x0000000108733c79 chromedriver + 2288761\n16  chromedriver                        0x0000000108762f69 chromedriver + 2482025\n17  chromedriver                        0x0000000108775103 chromedriver + 2556163\n18  libsystem_pthread.dylib             0x00007fff20560950 _pthread_start + 224\n19  libsystem_pthread.dylib             0x00007fff2055c47b thread_start + 15", "trace": "self = <scripts.test01_mp_login.TestMpLogin object at 0x1070935e0>, username = '15727366536'\ncode = '246810', expect = '15727366536'\n\n    @pytest.mark.parametrize(\"username,code,expect\", read_yaml(\"mp_login.yaml\"))\n    def test_mp_login(self, username, code, expect):\n        # 调用登录业务方法\n        self.mp.page_mp_login(username, code)\n        # 断言\n        try:\n>           assert expect == self.mp.page_get_nickname()\n\nscripts/test01_mp_login.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage/page_mp_login.py:23: in page_get_nickname\n    return self.base_get_text(page.mp_nickname)\nbase/base.py:66: in base_get_text\n    log.info(\"正在对：{} 元素获取文本，获取的文本值为：{}\".format(loc, self.base_find(loc).text))\nbase/base.py:27: in base_find\n    return WebDriverWait(self.driver, timeout=timeout, poll_frequency=poll).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e46713b53fdef1b1364f0f30fb2d2d97\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x1070c2dc0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010876f909 chromedriver + 2533641\nE       1   chromedriver                        0x0000000108df9d53 chromedriver + 9391443\nE       2   chromedriver                        0x000000010852d3c3 chromedriver + 164803\nE       3   chromedriver                        0x000000010855d504 chromedriver + 361732\nE       4   chromedriver                        0x0000000108589984 chromedriver + 543108\nE       5   chromedriver                        0x0000000108578d7d chromedriver + 474493\nE       6   chromedriver                        0x0000000108587c06 chromedriver + 535558\nE       7   chromedriver                        0x0000000108579043 chromedriver + 475203\nE       8   chromedriver                        0x0000000108553616 chromedriver + 321046\nE       9   chromedriver                        0x0000000108554587 chromedriver + 324999\nE       10  chromedriver                        0x000000010873e7f9 chromedriver + 2332665\nE       11  chromedriver                        0x000000010874b963 chromedriver + 2386275\nE       12  chromedriver                        0x000000010874b45b chromedriver + 2384987\nE       13  chromedriver                        0x00000001087255b5 chromedriver + 2229685\nE       14  chromedriver                        0x000000010874c3bf chromedriver + 2388927\nE       15  chromedriver                        0x0000000108733c79 chromedriver + 2288761\nE       16  chromedriver                        0x0000000108762f69 chromedriver + 2482025\nE       17  chromedriver                        0x0000000108775103 chromedriver + 2556163\nE       18  libsystem_pthread.dylib             0x00007fff20560950 _pthread_start + 224\nE       19  libsystem_pthread.dylib             0x00007fff2055c47b thread_start + 15\n\n../../../Library/Python/3.9/lib/python/site-packages/selenium/webdriver/support/wait.py:87: TimeoutException"}, "attachments": [{"name": 